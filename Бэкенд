Java — один из самых популярных языков программирования. Он универсален и используется уже более 20 лет.
Универсальность обеспечивается виртуальной машиной Java (Java Virtual Machine, JVM).
Во многих языках во время компиляции программа переводится в код, который может работать по-разному на разных устройствах или платформах. 
В Java этой проблемы нет.
JVM играет роль промежуточного уровня — из программы на Java она делает код, который может выполняться на любом компьютере независимо от того, где код был скомпилирован.

У Java большое сообщество, и в интернете можно найти ответы практически на любые вопросы о языке.
Технологии Java могут использоваться для многих задач, среди которых:

разработка мобильных приложений под Android;
разработка бэкенда веб-сайтов;
разработка API для работы с базами данных;
цифровая обработка изображений;
создание настольных приложений;
программирование сетевых задач.


Для Java существует множество фреймворков. Но я буду использовать spring framework.
Spring — один из наиболее широко используемых фреймворков для разработки интерпрайз-приложений, обеспечивающий продуманную модель программирования и конфигурации.
Целью создания данного фреймворка способствовало желание упростить разработку приложений на популярном в то время Java EE стеке технологий от компании Oracle, который на тот момент был очень сложен и не всегда удобен в использовании.

В отличие от других платформ, Spring фокусируется на нескольких областях функционирования приложений и предоставляет для них широкий спектр дополнительных функций.
Одной из основных особенностей Spring Framework является использование паттерна Dependency Injection (DI, внедрение зависимости).
DI помогает намного проще реализовывать необходимую приложениям функциональность, а также позволяет разрабатывать слабо связанные классы, делая их более универсальными.

Преимущества Spring Framework
• Spring Framework может быть задействован на всех архитектурных слоях, применяемых при при разработке web-приложений

• Использует модель POJO при написании классов, а это очень легкая структура

• Позволяет свободно связывать модули и легко их тестировать

• Поддерживает декларативное программирование

• Избавляет от самостоятельного создания фабричных и синглтон-классов

• Поддерживает различные способы конфигурации

• Предоставляет сервис уровня middleware
Несмотря на наличие стольких преимуществ, которыми обладает Spring, длительная процедура подготовки, связанная с его настройкой, способствовала появлению Spring Boot.
